~ Here we shall investigate closures.

let f = fn(s: string, x: int)
  let g = fn()
    print(s + ": " + show(x) + "\n")
    x = x + 1
  return g

~ Here `x` refers to two copies of an argument
~ of `f` that normally wouldn't continue to exist
~ since `f` returned.
let g1 = f("g1", 0), g2 = f("g2", 0)

g1()
g2()
g1()
g1()
g2()
